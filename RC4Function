<?php
	function encrypt($key,$plaintext){
	
	
		//initializing data
		$ascKeys = array_values(unpack("C*", $key)); //re-indexing unpack result using array_values
		$ascPlains = array_values(unpack("C*", $plaintext));

		$lenAscKeys = count($ascKeys); // count length of array
		$lenAscPlain = count($ascPlains);

		//initializing key
		$strkey = array();
		for($i=0;$i<256;$i++){
			array_push($strkey, $i);
		}
		//padding key
		if($lenAscKeys < 256){
			for($i=0;$i<256-$lenAscKeys;$i++){
				array_push($ascKeys, $ascKeys[$i]);
			}
		}
		//permutation
		$j=0;
		for($i=0;$i<256;$i++){
			$j = ($j+$strkey[$i]+$ascKeys[$i]) % 256;
			$tmp = $strkey[$i];
			$strkey[$i] = $strkey[$j];
			$strkey[$j] = $tmp;
		}
		
		
		
		//encryption begins here
		$initI = 0;
		$initJ = 0;
		for($initIdx = 0;$initIdx < $lenAscPlain;$initIdx++){
			$initI = ($initI + 1) % 256;
			$initJ = ($initJ + $strkey[$initI]) % 256;
			$temp = $strkey[$initI];
			$strkey[$initI] = $strkey[$initJ];
			$strkey[$initJ] = $temp;
			$initT = ($strkey[$initI] + $strkey[$initJ]) % 256;
			$K = $strkey[$initT];
			$chipertext[$initIdx] = $K^=$ascPlains[$initIdx];
		}
		//encriptions finishes here
		
		//final steps
		$chipers = call_user_func_array('pack', array_merge(array('C*'),$chipertext));
		return $chipers;
	}
?>
